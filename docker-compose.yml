version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: whatsapp-broadcast-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: whatsapp_broadcast
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    ports:
      - "27017:27017"
    networks:
      - whatsapp-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: whatsapp-broadcast-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - whatsapp-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    container_name: whatsapp-broadcast-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/whatsapp_broadcast?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - JWT_SECRET=your-super-secure-production-jwt-secret-key-here
      - FRONTEND_URL=http://localhost:3000
      - PORT=5000
    volumes:
      - backend_sessions:/app/backend/sessions
      - backend_uploads:/app/backend/uploads
      - backend_logs:/app/backend/logs
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
      - redis
    networks:
      - whatsapp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: whatsapp-broadcast-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=http://localhost:5000/api
      - NEXT_PUBLIC_WS_URL=http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - whatsapp-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: whatsapp-broadcast-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - whatsapp-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  backend_sessions:
    driver: local
  backend_uploads:
    driver: local
  backend_logs:
    driver: local

networks:
  whatsapp-network:
    driver: bridge
